{"name":"MILP-MTL","tagline":"An MILP Approach for Real-time Optimal Controller Synthesis with Metric Temporal Logic Specifications","body":"# MILP-MTL\r\nAn MILP Approach for Real-time Optimal Controller Synthesis with Metric Temporal Logic Specifications\r\nSee http://tinyurl.com/sahaResearch#MILP-MTL for details.\r\n\r\n# Installing Dependencies\r\n\r\nThis code depends on YALMIP, which can be obtained with the Multi-Parametric Toolbox, or MPT3, \r\nsee http://control.ee.ethz.ch/~mpt/3/Main/Installation. MPT is also required for plotting polyhedras.\r\n\r\nComputing robustness for the MTL specifications depends on the s-TaLiRo tool, which can be downloaded from\r\nhttps://sites.google.com/a/asu.edu/s-taliro/s-taliro/download\r\n\r\nWe use the Gurobi solver as back-end to solve the optimization problem, though other solvers might work as well. \r\nFor the user-interactive example to work without modifications, Gurobi needs to be installed and configured for Matlab. \r\nSee http://www.gurobi.com.\r\n\r\nThe user-interactive example also uses a customized ginput.m file by Jiro Doke (http://www.mathworks.com/matlabcentral/fileexchange/38703-custom-ginput/content/ginputc.m) and is included here.\r\n\r\n# Example\r\n\r\nOnce everything is installed, you can run the file 'find_OptimalTraj_mpc_m3pi.m' and choose either to run the in-built \r\nexample or provide a reach-avoid MTL specification of your choice.\r\n\r\n# Contact Us\r\n\r\nYou can contact sahas3@rpi.edu for any queries or to report any bugs in the code.\r\n","google":"UA-71625240-1","note":"Don't delete this file! It's used internally to help with page regeneration."}